<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>
@{
    Page.Title = "<#= ViewDataTypeShortName #>s";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<p>
    <a href="@Url.Action("Create")" class="btn btn-default">Create a <#= ViewDataTypeShortName #></a>
</p>

<table class="table">
    <thead>
        <tr>
            <th></th>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
            <th>@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)</th>
<#
    }
}
#>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
<#
string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
                <td>
                    <a href="@Url.Action("Details", new { id = item.<#= pkName #> })" class="btn btn-default btn-sm">View</a>
                    <a href="@Url.Action("Edit", new { id = item.<#= pkName #> })" class="btn btn-default btn-sm">Edit</a>
                </td>
<#
} else {
#>
                <td>
                    <a href="@Url.Action("Details", new { /* id = item.PrimaryKey */})" class="btn btn-default btn-sm">View</a>
                    <a href="@Url.Action("Edit", new { /* id = item.PrimaryKey */ })" class="btn btn-default btn-sm">Edit</a>
                </td>
<#
}
#>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
                <td>@Html.DisplayFor(_ => <#= "item." + GetValueExpression(property) #>)</td>
<#
    }
}
#>
            </tr>
        }
    </tbody>
</table>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>