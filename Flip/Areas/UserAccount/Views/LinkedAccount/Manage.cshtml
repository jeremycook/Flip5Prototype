@model IEnumerable<BrockAllen.MembershipReboot.LinkedAccount>
@{
    Page.Title = "Manage Linked Accounts";
}

<p>Have a Facebook or Google account that your often logged into? By linking one of those accounts to your user account at this website you can sign into this site by simply clicking a "Login with Facebook" or "Login with Google" button instead of entering your username and password for this site.</p>

<h2>Currently Linked Accounts</h2>
@if (Model.Any())
{
    @Html.ValidationSummary()
    <ul>
        @foreach (var account in Model)
        {
            <li>
                @using (Html.BeginForm("Remove", "LinkedAccount"))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="provider" value="@account.ProviderName" />
                    <input type="hidden" name="id" value="@account.ProviderAccountID" />
                    <button class="btn btn-danger">Remove Linked Account</button>
                }
                @account.ProviderName (@account.ProviderAccountID)
            </li>
        }
    </ul>
}
else
{
    <p>No linked accounts.</p>
}

<h2>Link an Account</h2>
<p>
    @Html.ActionLink("Link with Google", "Login", new { type = "Google" }, new { @class = "btn btn-default" })
    @Html.ActionLink("Link with Facebook", "Login", new { type = "Facebook" }, new { @class = "btn btn-default" })
</p>
